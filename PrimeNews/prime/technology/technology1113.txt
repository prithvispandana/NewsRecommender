There are a million and one ways to do (micro-)services, each with a million and one pitfalls.  At Curalate, we’ve been on a long journey of splitting out our monolith into composable and simple services.  It’s never easy, as there are a lot of advantages to having a monolith. Things like refactoring, code-reuse, deployment, versioning, rollbacks, are all atomic in a monolith.  But there are a lot of disadvantages as well.  Monoliths encourage poor factoring, bugs in one part of the codebase force rollbacks/changes of the entire application, reasoning about the application in general becomes difficult, build times are slow, transient build errors increase, etc.