
#------------------------------------------------
# Install python and necessary packages 
#------------------------------------------------

# download Python 3.5.2 (for 64 bit)
https://www.python.org/ftp/python/3.5.2/python-3.5.2-amd64.exe
or 
# download Python 3.5.2 (for 32 bit)
https://www.python.org/ftp/python/3.5.2/python-3.5.2.exe

# install Microsoft Visual C++ 2015
http://landinghub.visualstudio.com/visual-cpp-build-tools

# download get-pip.py under C:/
https://bootstrap.pypa.io/get-pip.py

# install PIP
python get-pip.py

# install all necessary packages
python -m pip install bcrypt
python -m pip install tweepy
python -m pip install pymongo
python -m pip install spacy
python -m pip install sputnik
python -m pip install flask
python -m pip install flask_cors
python -m pip install sklearn
python -m pip install pandas


# download scipy (for 64 bit) to C:/
http://www.lfd.uci.edu/~gohlke/pythonlibs/tuft5p8b/scipy-0.19.1-cp35-cp35m-win_amd64.whl
or 
# download scipy (for 32 bit) to C:/
http://www.lfd.uci.edu/~gohlke/pythonlibs/tuft5p8b/scipy-0.19.1-cp35-cp35m-win32.whl

# install scipy (for example, 64 bit)
cd C:/
python -m pip install scipy-0.19.1-cp35-cp35m-win_amd64.whl


# download numpy+mkl (for 64 bit) to C:/
http://www.lfd.uci.edu/~gohlke/pythonlibs/tuft5p8b/numpy-1.13.1+mkl-cp35-cp35m-win_amd64.whl
or
# download numpy+mkl (for 32 bit) to C:/
http://www.lfd.uci.edu/~gohlke/pythonlibs/tuft5p8b/numpy-1.13.1+mkl-cp35-cp35m-win32.whl
cd C:/
python -m pip install numpy-1.13.1+mkl-cp35-cp35m-win_amd64.whl


#------------------------------------------------
# Install MongoDB
#------------------------------------------------

# step1 - download MongoDB v3.4.6 
https://www.mongodb.com/download-center#enterprise

# step2 - install
mkdir C:\MongoDB
install to C:\MongoDB\

# step3 - run the server
mkdir C:\MongoDB\data
cd C:\MongoDB\Server\3.4\bin
mongod -dbpath "C:\MongoDB\data"

# step4 - check if it is running successfully
If you can see "waiting for connections on port 27017", it started successfully

#------------------------------------------------
# Initialization of the System
#------------------------------------------------

# step0 - access to MongoDB shell
> mongo
> use tweets_db

# step1 - create Unique Index on collection NEWS
db.news.ensureIndex({'title' : 1}, {unique : true, dropDups : true})
db.news.ensureIndex({'url' : 1}, {unique : true, dropDups : true})


# step2 - create Text Index on collection NEWS
db.news.createIndex(
   {
     title: "text",
     description: "text"
   },
   {
     weights: {
       title: 3,
       description: 1
     },
     name: "TextIndex"
   }
 )


# step3 - set the daily tasks
# remove old data into news_history and keep data of last 10 days in collection news only [daily task]
10 0 * * * /bin/bash /home/student/recommender/Prime-Repo/DataCollection/clean.sh

# back up the collection news  [daily task]
10 1 * * * /usr/bin/mongoexport --db tweets_db --collection news --out /TEAM_PRIME_NEWS_BACKUP/`date +\%Y\%m\%d`_news.json

# back up the collection news_history  [daily task]
20 1 * * * /usr/bin/mongoexport --db tweets_db --collection news_history --out /TEAM_PRIME_NEWS_BACKUP/`date +\%Y\%m\%d`_news_history.json


#------------------------------------------------
# How to run the system 
#------------------------------------------------

# download the scripts
Download the whole project from GitHub and release it to C:/ as PrimeNews folder

# run Data Collection
cd C:\PrimeNews\DataCollection
Python DataCollection.py

# run Calculator for User Similarity
cd C:\PrimeNews\
Python user_sim_matrix_calc.py

# run web app
cd C:\PrimeNews\
Python _app_.py


#------------------------------------------------
# Related Document
#------------------------------------------------

# all tables used in the sytem
news		- store News Articles (only last 10 days)
news_history	- store News Atricles which older than last 10 days

<NEED TO ADD MORE>

#------------------------------------------------
# structure of the project
#------------------------------------------------

── DataCollection
│   ├── clean.sh		--> daily task for cleaning olde news articles and keep only the last 10 days news in the collection NEWS
│   ├── DataCollection.py	--> the main script for collecting news records
│   ├── log.cfg			--> the configuration of logger
│   ├── news.cfg		--> the configuration of the main script

── APP
│   ├── _app1_.py
│   ├── files
│   ├── prime
│   ├── primemodel.py
│   ├── static
│   ├── templates
│   └── user_sim_matrix_calc.py
